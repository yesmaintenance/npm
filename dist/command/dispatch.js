import{Octokit as c}from"@octokit/core";import a from"../lib/env.js";const f=async t=>{const n=a.GITHUB_USER,i=[],s=[],e=new c({auth:a.GITHUB_AUTH_TOKEN});for(const o of(await e.request(`GET /users/${n}/repos`)).data)s.push({owner:n,name:o.name});for(const o of(await e.request(`GET /users/${n}/orgs`)).data){i.push({name:o.login});for(const r of(await e.request(`GET /orgs/${o.login}/repos`)).data)s.push({owner:o.login,name:r.name})}for(const o of s){if(typeof t<"u"){for(const r of t)if(o.name!==r)return}try{for(const r of(await e.request(`GET /repos/${o.owner}/${o.name}/actions/workflows`,{owner:o.owner,repo:o.name})).data.workflows)try{await e.request(`POST /repos/${o.owner}/${o.name}/actions/workflows/${r.id}/dispatches`,{ref:"main"}),console.log(`Dispatched actions/workflows/${r.id} for: ${o.name}`)}catch{console.log(`Could not dispatch actions/workflows/${r.id} for: ${o.name}`)}}catch{console.log(`Could not dispatch actions/workflows and logs for: ${o.name}`)}}};var l=f;export{l as default};
